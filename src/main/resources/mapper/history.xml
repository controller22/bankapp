<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.mtcoding.bankapp.model.history.HistoryRepository">

   <select id="findByGubun"
    resultType="shop.mtcoding.bankapp.dto.history.HistoryRespDto">
    <if test="gubun == 'withdraw'">
     
        SELECT ht.id, ht.amount, ht.w_balance balance, wat.number sender, 'ATM'
        receiver, ht.created_at
        FROM history_tb ht
        INNER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        WHERE ht.w_account_id = #{accountId}
        ORDER BY id aSC
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    <if test="gubun == 'deposit'">
    
        SELECT ht.id, ht.amount, ht.d_balance balance, 'ATM' sender, dat.number
        receiver, ht.created_at
        FROM history_tb ht
        INNER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.d_account_id = #{accountId}
        ORDER BY id asc
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    <if test="gubun == 'all'">
    
        SELECT
        ht.id,
        ht.amount,
        nvl(wat.number, 'ATM') sender,
        nvl(dat.number, 'ATM') receiver,
        case when wat.id = 1 then ht.w_balance
        when dat.id = 1 then ht.d_balance
        end as balance,
        ht.created_at
        FROM history_tb ht
        LEFT OUTER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        LEFT OUTER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.w_account_id = #{accountId} or ht.d_account_id = #{accountId}
        ORDER BY id asc
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    </select>
    
    <select id="findBySender"
    resultType="shop.mtcoding.bankapp.dto.search.DetailSearchRespDto">
    <if test="gubun == 'withdraw'">
     
        SELECT ht.id, ht.amount, ht.w_balance balance, wat.number sender, 'ATM'
        receiver, ht.created_at
        FROM history_tb ht
        INNER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        WHERE ht.w_account_id = #{accountId} and 'ATM' like CONCAT('%',#{searchString},'%')
        ORDER BY id asc
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    <if test="gubun == 'deposit'">
    
        SELECT ht.id, ht.amount, ht.d_balance balance, 'ATM' sender, dat.number
        receiver, ht.created_at
        FROM history_tb ht
        INNER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.d_account_id = #{accountId} and dat.number like CONCAT('%',#{searchString},'%')
        ORDER BY id asc
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    <if test="gubun == 'all'">
    
        SELECT
        ht.id,
        ht.amount,
        nvl(wat.number, 'ATM') sender,
        nvl(dat.number, 'ATM') receiver,
        case when wat.id = 1 then ht.w_balance
        when dat.id = 1 then ht.d_balance
        end as balance,
        ht.created_at
        FROM history_tb ht
        LEFT OUTER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        LEFT OUTER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE (ht.w_account_id = #{accountId} or ht.d_account_id = #{accountId})
             and dat.number like CONCAT('%',#{searchString},'%')
        ORDER BY id asc
        LIMIT #{pageStart}, #{perPageNum}
    </if>
    </select>


     <select id="historyListCnt1" resultType="int">
        <if test="gubun == 'withdraw'">
        SELECT count(*)
        FROM history_tb ht
        INNER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        WHERE ht.w_account_id = #{accountId} and 'ATM' like CONCAT('%',#{searchString},'%')
        </if>
        <if test="gubun == 'deposit'">
        SELECT count(*)
        FROM history_tb ht
        INNER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.d_account_id = #{accountId} and dat.number like CONCAT('%',#{searchString},'%')
        </if>
        <if test="gubun == 'all'">
        SELECT count(*)
        FROM history_tb ht
        LEFT OUTER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        LEFT OUTER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE (ht.w_account_id = #{accountId} or ht.d_account_id = #{accountId})
             and dat.number like CONCAT('%',#{searchString},'%')
        </if>
    </select>



    <select id="historyListCnt" resultType="int">
        <if test="gubun == 'withdraw'">
        SELECT count(*)
        FROM history_tb ht
        INNER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        WHERE ht.w_account_id = #{accountId}
    </if>
    <if test="gubun == 'deposit'">
        SELECT count(*)
        FROM history_tb ht
        INNER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.d_account_id = #{accountId}
    </if>
    <if test="gubun == 'all'">
        SELECT count(*)
        FROM history_tb ht
        LEFT OUTER JOIN account_tb wat
        ON ht.w_account_id = wat.id
        LEFT OUTER JOIN account_tb dat
        ON ht.d_account_id = dat.id
        WHERE ht.w_account_id = #{accountId} or ht.d_account_id = #{accountId};
    </if>
    </select>


    <select id="findAll" resultType="shop.mtcoding.bankapp.model.history.History">
        select * from history_tb
    </select>

    <select id="findById" resultType="shop.mtcoding.bankapp.model.history.History">
        select * from history_tb where id = #{id}
    </select>   

    <insert id="insert">
        insert into history_tb (amount, w_balance, d_balance,w_account_id,d_account_id, created_at) 
            values(#{amount}, #{wBalance}, #{dBalance},#{wAccountId}, #{dAccountId}, now())
    </insert>    

    <delete id="deleteById" >
        delete from history_tb where id = #{id} 
    </delete>    

    <update id="updateById" >
        update history_tb set id= #{id}, amount= #{amount}, w_balance= #{wBalance}, d_balance= #{dBalance}
        where id = #{id} 
    </update>    

    </mapper>